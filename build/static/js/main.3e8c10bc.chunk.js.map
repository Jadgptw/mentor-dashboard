{"version":3,"sources":["client/views/StudentsView.js","client/components/Students.js","client/views/TaskMarkView.js","client/components/TasksCreator.js","client/components/Tasks.js","client/Dashboard.js","index.js"],"names":["StudentsView","_ref","github","account","react_default","a","createElement","href","target","rel","Students","props","students","mentor","map","student","views_StudentsView","Object","assign","key","TaskMarkView","mark","status","className","concat","TasksCreator","link","name","_","find","tasks","taskStatus","getTaskStatus","toLowerCase","replace","views_TaskMarkView","Tasks","task","components_TasksCreator","options","mentors","value","label","Dashboard","state","JSON","parse","localStorage","getItem","handleChange","selectedMentor","currentMentor","_this","setState","setItem","stringify","fetch","res","text","user","this","react_select_esm","dafaultInputValud","onChange","components_Students","components_Tasks","Component","ReactDOM","render","client_Dashboard","document","getElementById"],"mappings":"mSAMeA,EAJM,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,OAAQC,EAAXF,EAAWE,QAAX,OACnBC,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGC,KAAML,EAAQM,OAAO,SAASC,IAAI,uBAAuBN,KCgBnDO,EAfE,SAACC,GAAU,IAElBC,EADWD,EAAXE,OACAD,SACR,OACER,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,6BAEEM,EAASE,IAAI,SAAAC,GAAO,OAAIX,EAAAC,EAAAC,cAACU,EAADC,OAAAC,OAAA,CAAcC,IAAKJ,EAAQb,QAAYa,SCN1DK,EAJM,SAAAnB,GAAA,IAAGoB,EAAHpB,EAAGoB,KAAMC,EAATrB,EAASqB,OAAT,OACjBlB,EAAAC,EAAAC,cAAA,MAAIiB,UAAS,eAAAC,OAAiBF,IAAWD,IC4B9BI,EAhBM,SAAAxB,GAAA,IAAGyB,EAAHzB,EAAGyB,KAAMC,EAAT1B,EAAS0B,KAAML,EAAfrB,EAAeqB,OAAQV,EAAvBX,EAAuBW,SAAvB,OACnBR,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGC,KAAMmB,EAAMlB,OAAO,SAASC,IAAI,uBAAuBkB,IAE5DC,IAAEd,IAAIF,EAAU,SAACG,GAAY,IACnBM,EAASO,IAAEC,KAAKd,EAAQe,MAAO,CAAEH,SAAjCN,KACFU,EAhBQ,SAACV,EAAMU,GAC3B,IAAIT,EAASS,EAMb,MALa,KAATV,EACFC,EAAS,UACS,KAATD,GAA8B,YAAfU,IACxBT,EAAS,sBAEJA,EASkBU,CAAcX,EAAMC,EAAOW,cAAcC,QAAQ,KAAM,MAE1E,OACE9B,EAAAC,EAAAC,cAAC6B,EAAD,CAAchB,IAAG,GAAAK,OAAKG,EAAL,KAAAH,OAAaT,EAAQb,QAAUmB,KAAMA,EAAMC,OAAQS,QCP/DK,EAZD,SAAAnC,GAAkB,IAAfW,EAAeX,EAAfW,SACPkB,EAAUlB,EAAS,GAAnBkB,MAER,OACE1B,EAAAC,EAAAC,cAAA,aAEIsB,IAAEd,IAAIgB,EAAO,SAAAO,GAAI,OAAIjC,EAAAC,EAAAC,cAACgC,EAADrB,OAAAC,OAAA,CAAcC,IAAKkB,EAAKX,MAAUW,EAAlC,CAAwCzB,SAAUA,SCHzE2B,EAAUX,IAAEd,IAAI0B,EAAS,SAAA3B,GAAM,MAAK,CAAE4B,MAAO5B,EAAOX,OAAQwC,MAAO7B,EAAOX,UAiEjEyC,6MA9DbC,MAAQ,CACN/B,OAAQgC,KAAKC,MAAMC,aAAaC,QAAQ,YAAc,MAGxDC,aAAe,SAACC,GACd,IAAMC,EAAgBvB,IAAEC,KAAKW,EAAS,CAAEtC,OAAQgD,EAAeT,QAC3DU,IACFC,EAAKC,SAAS,CACZxC,OAAQsC,IAEVJ,aAAaO,QAAQ,SAAUT,KAAKU,UAAUJ,2NAK9BK,MAAM,qBAAlBC,kBACaA,EAAIC,cAAjBC,UACAR,EAAgBvB,IAAEC,KAAKW,EAAS,CAAEtC,OAAQyD,OAE9CC,KAAKP,SAAS,CACZxC,OAAQsC,IAEVJ,aAAaO,QAAQ,SAAUT,KAAKU,UAAUJ,wIAIzC,IACCtC,EAAW+C,KAAKhB,MAAhB/B,OACR,OAAKA,EAaHT,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CACEtC,UAAU,0BACVuC,kBAAmBjD,EAAOX,OAC1B6D,SAAUH,KAAKX,aACfV,QAASA,IAGXnC,EAAAC,EAAAC,cAAA,KAAGC,KAAK,gBAAR,eAEAH,EAAAC,EAAAC,cAAA,SAAOiB,UAAU,mBACfnB,EAAAC,EAAAC,cAAA,eAAUO,EAAOX,QAEjBE,EAAAC,EAAAC,cAAC0D,EAAD,CAAUnD,OAAQA,IAClBT,EAAAC,EAAAC,cAAC2D,EAAUpD,KAzBbT,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CACEtC,UAAU,0BACVwC,SAAUH,KAAKX,aACfV,QAASA,IAEXnC,EAAAC,EAAAC,cAAA,KAAGC,KAAK,gBAAR,uBArCc2D,aCHxBC,IAASC,OAAOhE,EAAAC,EAAAC,cAAC+D,EAAD,MAAeC,SAASC,eAAe","file":"static/js/main.3e8c10bc.chunk.js","sourcesContent":["import React from 'react';\n\nconst StudentsView = ({ github, account }) => (\n  <th><a href={github} target=\"_blank\" rel=\"noopener noreferrer\">{account}</a></th>\n);\n\nexport default StudentsView;\n","import React from 'react';\n\nimport StudentsView from '../views/StudentsView';\n\nconst Students = (props) => {\n  const { mentor } = props;\n  const { students } = mentor;\n  return (\n    <thead>\n      <tr>\n        <th>task \\ student</th>\n        {\n          students.map(student => <StudentsView key={student.github} {...student}/>)\n        }\n      </tr>\n    </thead>\n  );\n};\n\nexport default Students;\n","import React from 'react';\n\nconst TaskMarkView = ({ mark, status }) => (\n    <td className={`task-status-${status}`}>{mark}</td>\n);\n\nexport default TaskMarkView;\n","import React from 'react';\nimport _ from \"lodash\";\n\nimport TaskMarkView from '../views/TaskMarkView';\n\nconst getTaskStatus = (mark, taskStatus) => {\n  let status = taskStatus;\n  if (mark !== '') {\n    status = 'checked';\n  } else if (mark === '' && taskStatus === 'checked') {\n    status = 'checking-time-gone';\n  }\n  return status;\n};\n\nconst TasksCreator = ({ link, name, status, students }) => (\n  <tr>\n    <td><a href={link} target=\"_blank\" rel=\"noopener noreferrer\">{name}</a></td>\n    {\n      _.map(students, (student) => {\n        const { mark } = _.find(student.tasks, { name });\n        const taskStatus = getTaskStatus(mark, status.toLowerCase().replace(/\\s/, '-'));\n\n        return (\n          <TaskMarkView key={`${name}-${student.github}`} mark={mark} status={taskStatus}/>\n        );\n      })\n    }\n  </tr>\n);\n\nexport default TasksCreator;\n","import _ from 'lodash';\nimport React from 'react';\n\nimport TasksCreator from './TasksCreator';\n\nconst Tasks = ({ students }) => {\n  const { tasks } = students[0];\n\n  return (\n    <tbody>\n      {\n        _.map(tasks, task => <TasksCreator key={task.link} {...task} students={students}/>)\n      }\n    </tbody>\n  );\n};\n\nexport default Tasks;\n","import React, { Component } from 'react';\r\nimport Select from 'react-select';\r\nimport _ from 'lodash';\r\n\r\nimport mentors from './json/mentors.json';\r\nimport Students from './components/Students';\r\nimport Tasks from './components/Tasks';\r\n\r\nconst options = _.map(mentors, mentor => ({ value: mentor.github, label: mentor.github }));\r\n\r\nclass Dashboard extends Component {\r\n  state = {\r\n    mentor: JSON.parse(localStorage.getItem('mentor')) || '',\r\n  };\r\n\r\n  handleChange = (selectedMentor) => {\r\n    const currentMentor = _.find(mentors, { github: selectedMentor.value });\r\n    if (currentMentor) {\r\n      this.setState({\r\n        mentor: currentMentor,\r\n      });\r\n      localStorage.setItem('mentor', JSON.stringify(currentMentor));\r\n    }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await fetch('/me');\r\n    const user = await res.text();\r\n    const currentMentor = _.find(mentors, { github: user });\r\n    if (currentMentor) {\r\n      this.setState({\r\n        mentor: currentMentor,\r\n      });\r\n      localStorage.setItem('mentor', JSON.stringify(currentMentor));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { mentor } = this.state;\r\n    if (!mentor) {\r\n      return (\r\n        <section>\r\n          <Select\r\n            className=\"container mentor-select\"\r\n            onChange={this.handleChange}\r\n            options={options}\r\n          />\r\n          <a href=\"/auth/github\">Github auth</a>\r\n        </section>\r\n      );\r\n    }\r\n    return (\r\n      <section>\r\n        <Select\r\n          className=\"container mentor-select\"\r\n          dafaultInputValud={mentor.github}\r\n          onChange={this.handleChange}\r\n          options={options}\r\n        />\r\n\r\n        <a href=\"/auth/github\">Github auth</a>\r\n\r\n        <table className=\"dashboard-table\">\r\n          <caption>{mentor.github}</caption>\r\n\r\n          <Students mentor={mentor} />\r\n          <Tasks {...mentor} />\r\n        </table>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './client/views/index.css';\n\nimport Dashboard from './client/Dashboard'\n\nReactDOM.render(<Dashboard />, document.getElementById('root'));\n\n"],"sourceRoot":""}